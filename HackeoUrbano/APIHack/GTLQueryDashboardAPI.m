/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2016 Google Inc.
 */

//
//  GTLQueryDashboardAPI.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   Dashboard API (dashboardAPI/v1)
// Description:
//   This API exposes the services required by the mapaton dashboard of mapaton
// Classes:
//   GTLQueryDashboardAPI (14 custom class methods, 5 custom properties)

#import "GTLQueryDashboardAPI.h"

#import "GTLDashboardAPIAreaWrapper.h"
#import "GTLDashboardAPICursorParameter.h"
#import "GTLDashboardAPIQuestionnaireWrapper.h"
#import "GTLDashboardAPIRouteStatsParameter.h"
#import "GTLDashboardAPIRouteStatsResponse.h"
#import "GTLDashboardAPIRouteStatsWrapper.h"
#import "GTLDashboardAPISearchByKeywordParameter.h"
#import "GTLDashboardAPITrailDetails.h"
#import "GTLDashboardAPITrailDetailsCollection.h"
#import "GTLDashboardAPITrailListResponse.h"
#import "GTLDashboardAPITrailPointsRequestParameter.h"
#import "GTLDashboardAPITrailPointsResult.h"

@implementation GTLQueryDashboardAPI

@dynamic fields, identifier, password, trailId, trailIds;

+ (NSDictionary *)parameterNameMap {
  NSDictionary *map = @{
    @"identifier" : @"id"
  };
  return map;
}

#pragma mark - Service level methods
// These create a GTLQueryDashboardAPI object.

+ (instancetype)queryForGetAllGtfsTrailsWithObject:(GTLDashboardAPICursorParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"dashboardAPI.getAllGtfsTrails";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLDashboardAPITrailListResponse class];
  return query;
}

+ (instancetype)queryForGetAllStatsWithObject:(GTLDashboardAPIRouteStatsParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"dashboardAPI.getAllStats";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLDashboardAPIRouteStatsResponse class];
  return query;
}

+ (instancetype)queryForGetAllTrailsWithObject:(GTLDashboardAPICursorParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"dashboardAPI.getAllTrails";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLDashboardAPITrailListResponse class];
  return query;
}

+ (instancetype)queryForGetAllValidTrailsWithObject:(GTLDashboardAPICursorParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"dashboardAPI.getAllValidTrails";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLDashboardAPITrailListResponse class];
  return query;
}

+ (instancetype)queryForGetQuestionnaireWithIdentifier:(long long)identifier {
  NSString *methodName = @"dashboardAPI.getQuestionnaire";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLDashboardAPIQuestionnaireWrapper class];
  return query;
}

+ (instancetype)queryForGetStatsWithTrailId:(long long)trailId {
  NSString *methodName = @"dashboardAPI.getStats";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.trailId = trailId;
  query.expectedObjectClass = [GTLDashboardAPIRouteStatsWrapper class];
  return query;
}

+ (instancetype)queryForGetTrailDetailsWithTrailId:(long long)trailId {
  NSString *methodName = @"dashboardAPI.getTrailDetails";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.trailId = trailId;
  query.expectedObjectClass = [GTLDashboardAPITrailDetails class];
  return query;
}

+ (instancetype)queryForGetTrailRawPointsWithObject:(GTLDashboardAPITrailPointsRequestParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"dashboardAPI.getTrailRawPoints";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLDashboardAPITrailPointsResult class];
  return query;
}

+ (instancetype)queryForGetTrailsByStationNameWithObject:(GTLDashboardAPISearchByKeywordParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"dashboardAPI.getTrailsByStationName";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLDashboardAPITrailDetailsCollection class];
  return query;
}

+ (instancetype)queryForGetTrailSnappedPointsWithObject:(GTLDashboardAPITrailPointsRequestParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"dashboardAPI.getTrailSnappedPoints";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLDashboardAPITrailPointsResult class];
  return query;
}

+ (instancetype)queryForRegisterGtfsFullTaskWithPassword:(NSString *)password {
  NSString *methodName = @"dashboardAPI.registerGtfsFullTask";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.password = password;
  return query;
}

+ (instancetype)queryForRegisterGtfsTaskWithPassword:(NSString *)password
                                            trailIds:(NSString *)trailIds {
  NSString *methodName = @"dashboardAPI.registerGtfsTask";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.password = password;
  query.trailIds = trailIds;
  return query;
}

+ (instancetype)queryForRegisterQuestionnaireWithObject:(GTLDashboardAPIQuestionnaireWrapper *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"dashboardAPI.registerQuestionnaire";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  return query;
}

+ (instancetype)queryForTrailsNearPointWithObject:(GTLDashboardAPIAreaWrapper *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"dashboardAPI.trailsNearPoint";
  GTLQueryDashboardAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLDashboardAPITrailDetailsCollection class];
  return query;
}

@end

/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2016 Google Inc.
 */

//
//  GTLQueryMapatonPublicAPI.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   Mapaton Public API (mapatonPublicAPI/v1)
// Description:
//   This is the public API for mapaton
// Classes:
//   GTLQueryMapatonPublicAPI (10 custom class methods, 4 custom properties)

#import "GTLQueryMapatonPublicAPI.h"

#import "GTLMapatonPublicAPIAreaWrapper.h"
#import "GTLMapatonPublicAPICursorParameter.h"
#import "GTLMapatonPublicAPINearTrailsCollection.h"
#import "GTLMapatonPublicAPISearchByKeywordParameter.h"
#import "GTLMapatonPublicAPITrailDetails.h"
#import "GTLMapatonPublicAPITrailDetailsCollection.h"
#import "GTLMapatonPublicAPITrailListResponse.h"
#import "GTLMapatonPublicAPITrailPointsRequestParameter.h"
#import "GTLMapatonPublicAPITrailPointsResult.h"

@implementation GTLQueryMapatonPublicAPI

@dynamic fields, password, trailId, trailIds;

#pragma mark - Service level methods
// These create a GTLQueryMapatonPublicAPI object.

+ (instancetype)queryForGetAllGtfsTrailsWithObject:(GTLMapatonPublicAPICursorParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"mapatonPublicAPI.getAllGtfsTrails";
  GTLQueryMapatonPublicAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLMapatonPublicAPITrailListResponse class];
  return query;
}

+ (instancetype)queryForGetAllTrailsWithObject:(GTLMapatonPublicAPICursorParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"mapatonPublicAPI.getAllTrails";
  GTLQueryMapatonPublicAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLMapatonPublicAPITrailListResponse class];
  return query;
}

+ (instancetype)queryForGetAllValidTrailsWithObject:(GTLMapatonPublicAPICursorParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"mapatonPublicAPI.getAllValidTrails";
  GTLQueryMapatonPublicAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLMapatonPublicAPITrailListResponse class];
  return query;
}

+ (instancetype)queryForGetTrailDetailsWithTrailId:(long long)trailId {
  NSString *methodName = @"mapatonPublicAPI.getTrailDetails";
  GTLQueryMapatonPublicAPI *query = [self queryWithMethodName:methodName];
  query.trailId = trailId;
  query.expectedObjectClass = [GTLMapatonPublicAPITrailDetails class];
  return query;
}

+ (instancetype)queryForGetTrailRawPointsWithObject:(GTLMapatonPublicAPITrailPointsRequestParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"mapatonPublicAPI.getTrailRawPoints";
  GTLQueryMapatonPublicAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLMapatonPublicAPITrailPointsResult class];
  return query;
}

+ (instancetype)queryForGetTrailsByStationNameWithObject:(GTLMapatonPublicAPISearchByKeywordParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"mapatonPublicAPI.getTrailsByStationName";
  GTLQueryMapatonPublicAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLMapatonPublicAPITrailDetailsCollection class];
  return query;
}

+ (instancetype)queryForGetTrailSnappedPointsWithObject:(GTLMapatonPublicAPITrailPointsRequestParameter *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"mapatonPublicAPI.getTrailSnappedPoints";
  GTLQueryMapatonPublicAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLMapatonPublicAPITrailPointsResult class];
  return query;
}

+ (instancetype)queryForRegisterGtfsFullTaskWithPassword:(NSString *)password {
  NSString *methodName = @"mapatonPublicAPI.registerGtfsFullTask";
  GTLQueryMapatonPublicAPI *query = [self queryWithMethodName:methodName];
  query.password = password;
  return query;
}

+ (instancetype)queryForRegisterGtfsTaskWithPassword:(NSString *)password
                                            trailIds:(NSString *)trailIds {
  NSString *methodName = @"mapatonPublicAPI.registerGtfsTask";
  GTLQueryMapatonPublicAPI *query = [self queryWithMethodName:methodName];
  query.password = password;
  query.trailIds = trailIds;
  return query;
}

+ (instancetype)queryForTrailsNearPointWithObject:(GTLMapatonPublicAPIAreaWrapper *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"mapatonPublicAPI.trailsNearPoint";
  GTLQueryMapatonPublicAPI *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLMapatonPublicAPINearTrailsCollection class];
  return query;
}

@end
